'source.lua':
  'local cjson = require "cjson"'
    'prefix':'local cjson = require "cjson"'
    'body':'local cjson = require "cjson"'
  'local cjson2 = cjson.new()'
    'prefix':'local cjson2 = cjson.new()'
    'body':'local cjson2 = cjson.new()'
  'local cjson_safe = require "cjson.safe"'
    'prefix':'local cjson_safe = require "cjson.safe"'
    'body':'local cjson_safe = require "cjson.safe"'
  'text = cjson.encode(value)'
    'prefix':'text = cjson.encode(value)'
    'body':'text = cjson.encode(value)'
  'value = cjson.decode(text)'
    'prefix':'value = cjson.decode(text)'
    'body':'value = cjson.decode(text)'
  'setting = cjson.decode_invalid_numbers([setting])'
    'prefix':'setting = cjson.decode_invalid_numbers([setting])'
    'body':'setting = cjson.decode_invalid_numbers([setting])'
  'setting = cjson.encode_invalid_numbers([setting])'
    'prefix':'setting = cjson.encode_invalid_numbers([setting])'
    'body':'setting = cjson.encode_invalid_numbers([setting])'
  'keep = cjson.encode_keep_buffer([keep])'
    'prefix':'keep = cjson.encode_keep_buffer([keep])'
    'body':'keep = cjson.encode_keep_buffer([keep])'
  'depth = cjson.encode_max_depth([depth])'
    'prefix':'depth = cjson.encode_max_depth([depth])'
    'body':'depth = cjson.encode_max_depth([depth])'
  'depth = cjson.decode_max_depth([depth])'
    'prefix':'depth = cjson.decode_max_depth([depth])'
    'body':'depth = cjson.decode_max_depth([depth])'
  'convert, ratio, safe = cjson.encode_sparse_array([convert[, ratio[, safe]]])'
    'prefix':'convert, ratio, safe = cjson.encode_sparse_array([convert[, ratio[, safe]]])'
    'body':'convert, ratio, safe = cjson.encode_sparse_array([convert[, ratio[, safe]]])'
